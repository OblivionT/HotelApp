<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
</root>